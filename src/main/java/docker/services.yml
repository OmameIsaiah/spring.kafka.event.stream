#docker network create --driver bridge kafka_network
#docker-compose -f src/main/kafka-docker/services.yml down
#docker-compose -f src/main/kafka-docker/services.yml up -d --build
version: '3'

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    restart: always
    container_name: zookeeper
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      #KAFKA_ZOOKEEPER_CONNECT: localhost:2181
    ports:
      - "2181:2181"
    networks:
      - kafka_network

  #  schema-registry:
  #    image: confluentinc/cp-schema-registry:latest
  #    container_name: schema-registry
  #    hostname: schema-registry
  #    depends_on:
  #      - kafka
  #    ports:
  #      - "2182:2182"
  #    environment:
  #      SCHEMA_REGISTRY_HOST_NAME: schema-registry
  #      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
  #      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:2182
  #      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092,PLAINTEXT_INTERNAL://localhost:19092
  #      SCHEMA_REGISTRY_DEBUG: 'true'

  kafka:
    image: confluentinc/cp-kafka:latest
    restart: always
    container_name: kafka
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "19092:19092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_INTERNAL://localhost:19092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka
    networks:
      - kafka_network

networks:
  kafka_network:
    external: true
    driver: bridge

